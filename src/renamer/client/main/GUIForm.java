package renamer.client.main;

import renamer.client.options.Options;
import java.awt.List;
import java.io.File;
import java.util.ArrayList;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JFileChooser;
import renamer.bridge.gui.GUIHelper;
import renamer.shared.logging.Logs;
import renamer.shared.objects.Episode;
import renamer.server.options.OptClass;
import renamer.shared.objects.Season;
import renamer.shared.objects.Series;
import renamer.server.options.FileOptions;
import renamer.server.util.FileUt;
import renamer.shared.file.PathUt;

/**
 *
 * @author Matt-3
 */
public class GUIForm extends javax.swing.JFrame {
    private static final Logger logger = Logs.getLogger(GUIForm.class.getName());

    private static OptClass options;
    private String[] args;
    private Series cSeries;
    private static boolean filtSubs;

    /**
     * Creates new form GUIForm
     */
    public GUIForm() {
        initComponents();
        setOptions(FileOptions.checkOpt());
        filtSubs = false;
        if (options == null) {
            Logs.logSevere("Error getting options.", logger);
        } else {
            txtDir.setText(options.getDefaultDirectory());
            buttonRefresh.doClick();
        }

    }

    public static void setOptions(OptClass opt) {
        options = opt;
        changeOptions(opt);
    }

    private static void changeOptions(OptClass opt) {
        jFile.setCurrentDirectory(new File(opt.getDefaultDirectory()));
    }

    public static OptClass getOptions() {
        return options;
    }

    public void setResults(String seriesName, String id) {
        txtSeries.setText(seriesName);
        DefaultComboBoxModel theModel = (DefaultComboBoxModel) cmbSeason.getModel();
        theModel.removeAllElements();
        //this is where we scrape basic info
        Series currentSeries = GUIHelper.retrieveSeries(seriesName, id, options);

        if (currentSeries != null) {
            cSeries = currentSeries;

            if (currentSeries.hasSpecials()) {
                theModel.addElement("Specials");
                int numberSeasons = currentSeries.getNumberSeasons();
                for (int i = 0; i < numberSeasons; i++) {
                    theModel.addElement("Season " + (i + 1));
                }
            } else {
                int numberSeasons = currentSeries.getNumberSeasons();
                for (int i = 0; i < numberSeasons; i++) {
                    theModel.addElement("Season " + (i + 1));
                }
            }
            cmbSeason.setEnabled(true);
            cmbSeason.setSelectedIndex(0);


        } else {
            theModel.addElement("Season 1");
            listTVDB.removeAll();
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        subGroupOption = new javax.swing.ButtonGroup();
        jFile = new javax.swing.JFileChooser();
        listFiles = new java.awt.List();
        listTVDB = new java.awt.List();
        txtSeries = new javax.swing.JTextField();
        buttonDir = new javax.swing.JButton();
        cmbSeason = new javax.swing.JComboBox();
        buttonUp = new javax.swing.JButton();
        buttonDown = new javax.swing.JButton();
        buttonSet = new javax.swing.JButton();
        txtDir = new javax.swing.JTextField();
        buttonAllSet = new javax.swing.JButton();
        buttonRefresh = new javax.swing.JButton();
        dontFilterSubs = new javax.swing.JRadioButton();
        filterSubs = new javax.swing.JRadioButton();
        buttonRenameSelected = new javax.swing.JButton();
        buttonManual = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jToolsMenu = new javax.swing.JMenu();
        jMenuOptions = new javax.swing.JMenuItem();

        subGroupOption.add(filterSubs);
        subGroupOption.add(dontFilterSubs);

        jFile.setDialogTitle("\"Choose a Folder To Open\"");
        jFile.setFileSelectionMode(javax.swing.JFileChooser.DIRECTORIES_ONLY);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("The Renamer V0.2A");
        setBackground(new java.awt.Color(0, 0, 0));

        txtSeries.setText("Use The Button To Set A Series");
        txtSeries.setEnabled(false);
        txtSeries.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSeriesActionPerformed(evt);
            }
        });

        buttonDir.setText("Set Season Directory");
        buttonDir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonDirActionPerformed(evt);
            }
        });

        cmbSeason.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Season 1" }));
        cmbSeason.setEnabled(false);
        cmbSeason.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbSeasonItemStateChanged(evt);
            }
        });

        buttonUp.setIcon(new javax.swing.ImageIcon(getClass().getResource("/renamer/1377554166_9.png"))); // NOI18N
        buttonUp.setMaximumSize(new java.awt.Dimension(50, 50));
        buttonUp.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                buttonUpMousePressed(evt);
            }
        });
        buttonUp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonUpActionPerformed(evt);
            }
        });

        buttonDown.setIcon(new javax.swing.ImageIcon(getClass().getResource("/renamer/1377554175_10.png"))); // NOI18N
        buttonDown.setMaximumSize(new java.awt.Dimension(50, 50));
        buttonDown.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonDownActionPerformed(evt);
            }
        });

        buttonSet.setText("Set Series");
        buttonSet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSetActionPerformed(evt);
            }
        });

        txtDir.setText("Use The Button To Set A Directory");
        txtDir.setToolTipText("");
        txtDir.setEnabled(false);

        buttonAllSet.setText("OK! Rename Them All!");
        buttonAllSet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonAllSetActionPerformed(evt);
            }
        });

        buttonRefresh.setIcon(new javax.swing.ImageIcon(getClass().getResource("/renamer/q.jpg"))); // NOI18N
        buttonRefresh.setMaximumSize(new java.awt.Dimension(50, 50));
        buttonRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonRefreshActionPerformed(evt);
            }
        });

        dontFilterSubs.setSelected(true);
        dontFilterSubs.setText("Filter Videos");
        dontFilterSubs.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                dontFilterSubsStateChanged(evt);
            }
        });
        dontFilterSubs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dontFilterSubsActionPerformed(evt);
            }
        });

        filterSubs.setText("Filter Subtitles");
        filterSubs.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                filterSubsStateChanged(evt);
            }
        });
        filterSubs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                filterSubsActionPerformed(evt);
            }
        });

        buttonRenameSelected.setText("Rename Selected");
        buttonRenameSelected.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonRenameSelectedActionPerformed(evt);
            }
        });

        buttonManual.setText("Manually Rename");
        buttonManual.setEnabled(false);
        buttonManual.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonManualActionPerformed(evt);
            }
        });

        jToolsMenu.setText("Tools");

        jMenuOptions.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_MASK));
        jMenuOptions.setText("Options");
        jMenuOptions.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuOptionsActionPerformed(evt);
            }
        });
        jToolsMenu.add(jMenuOptions);

        jMenuBar1.add(jToolsMenu);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(76, 76, 76)
                        .addComponent(buttonRefresh, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(filterSubs)
                            .addComponent(dontFilterSubs)))
                    .addComponent(buttonManual, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(listFiles, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(buttonUp, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(buttonDown, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtDir, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buttonDir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtSeries, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buttonSet))
                    .addComponent(listTVDB, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(cmbSeason, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(buttonAllSet, javax.swing.GroupLayout.DEFAULT_SIZE, 148, Short.MAX_VALUE)
                    .addComponent(buttonRenameSelected, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(184, 184, 184))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtDir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(buttonSet)
                            .addComponent(txtSeries, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(buttonDir))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(listTVDB, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(listFiles, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(buttonUp, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(buttonDown, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(cmbSeason, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(buttonAllSet)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(buttonRenameSelected)))
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(buttonRefresh, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(59, 59, 59)
                        .addComponent(dontFilterSubs)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(filterSubs)
                        .addGap(18, 18, 18)
                        .addComponent(buttonManual)
                        .addGap(0, 342, Short.MAX_VALUE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private static void updateList(List awtList, File folder) {
        String files;
        try {
            Logs.logInfo("Opening the folder: " + folder.getAbsolutePath(), logger);
            File[] listOfFiles = folder.listFiles();
            for (int i = 0; i < listOfFiles.length; i++) {
                if (listOfFiles[i].isFile()) {
                    files = listOfFiles[i].getName();
                    filter(awtList, files);
                    
                }
            }
        } catch (Exception e) {
            Logs.logException(e, "Error Opening folder: " + folder.getAbsolutePath(), logger);
        }
    }
    
    private static void filter(List awtList, String file){
        if (filtSubs){
            String[] subs = OptClass.getSubFilters();
            if(PathUt.checkExtension(subs, file)){
                awtList.add(file);
            }
        } else {
            String[] Dvids = OptClass.getFilters();
            //System.out.println(file);
            if(PathUt.checkExtension(Dvids, file)){
                awtList.add(file);
            }
        }
    }

    private void buttonDirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonDirActionPerformed
        int returnVal = jFile.showOpenDialog(GUIForm.this);
        Logs.logInfo("Set Directory Pressed.", logger);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File folder = jFile.getSelectedFile();
            txtDir.setText(folder.getAbsolutePath());
            listFiles.removeAll();
            updateList(listFiles, folder);
        } else {
            Logs.logInfo("Open command cancelled by user.", logger);
        }
    }//GEN-LAST:event_buttonDirActionPerformed

    private void cmbSeasonItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbSeasonItemStateChanged
        listTVDB.removeAll();
        String selected = (String) cmbSeason.getSelectedItem();
        if (cSeries != null && selected != null) {
            Season s;

            if (selected.equals("Specials")) {
                s = cSeries.getSeasons().get("0");
            } else {
                String[] split = selected.split(" ");
                s = cSeries.getSeasons().get(split[1]);
            }
            ArrayList<Episode> eps = s.getEpisodes();
            for (int i = 0; i < eps.size(); i++) {
                listTVDB.add(eps.get(i).getFullName());
            }

        } else {
            listTVDB.removeAll();
        }
    }//GEN-LAST:event_cmbSeasonItemStateChanged

    private void buttonSetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSetActionPerformed
        SetSeriesForm.main(args);
        SetSeriesForm.setParent(this);
        this.setEnabled(false);
    }//GEN-LAST:event_buttonSetActionPerformed

    private void txtSeriesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSeriesActionPerformed
    }//GEN-LAST:event_txtSeriesActionPerformed

    private void buttonUpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonUpActionPerformed
        int index = listFiles.getSelectedIndex();
        if (index > 0 && index < listFiles.getItemCount()) {
            listFiles.add(listFiles.getItem(index), index - 1);
            listFiles.remove(index + 1);
            listFiles.select(index - 1);
        }
    }//GEN-LAST:event_buttonUpActionPerformed

    private void buttonDownActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonDownActionPerformed
        int index = listFiles.getSelectedIndex();
        if (index < listFiles.getItemCount() - 1) {
            listFiles.add(listFiles.getItem(index), index + 2);
            listFiles.remove(index);
            listFiles.select(index + 1);
        }
    }//GEN-LAST:event_buttonDownActionPerformed

    private void buttonAllSetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonAllSetActionPerformed
        File folder = new File(txtDir.getText());
        int size;
        if (listFiles.getItemCount() <= listTVDB.getItemCount()) {
            size = listFiles.getItemCount();
        } else {
            size = listTVDB.getItemCount();
        }
        for (int i = 0; i < size; i++) {
            if (!FileUt.renameFile(listFiles.getItem(i), listTVDB.getItem(i), folder, options.getLanguageTag(), filtSubs)){
                System.out.println("Failed in Rename All.");
            }
            
        }
        buttonRefresh.doClick();
    }//GEN-LAST:event_buttonAllSetActionPerformed

    private void buttonRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonRefreshActionPerformed
        listFiles.removeAll();
        File folder = new File(txtDir.getText());
        updateList(listFiles, folder);
    }//GEN-LAST:event_buttonRefreshActionPerformed

    private void jMenuOptionsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuOptionsActionPerformed
        Options.main(args);
        Options.setParent(this);
        this.setEnabled(false);
    }//GEN-LAST:event_jMenuOptionsActionPerformed

    private void filterSubsStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_filterSubsStateChanged
        
    }//GEN-LAST:event_filterSubsStateChanged

    private void dontFilterSubsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dontFilterSubsActionPerformed
        filtSubs = false;
        buttonRefresh.doClick();
    }//GEN-LAST:event_dontFilterSubsActionPerformed

    private void dontFilterSubsStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_dontFilterSubsStateChanged
    }//GEN-LAST:event_dontFilterSubsStateChanged

    private void filterSubsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_filterSubsActionPerformed
        filtSubs = true;
        buttonRefresh.doClick();
    }//GEN-LAST:event_filterSubsActionPerformed

    private void buttonUpMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonUpMousePressed

    }//GEN-LAST:event_buttonUpMousePressed

    private void buttonRenameSelectedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonRenameSelectedActionPerformed
        String lF, tvdb;
        lF = listFiles.getSelectedItem();
        tvdb = listTVDB.getSelectedItem();
        if (lF == null || tvdb == null){
            System.out.println("Two Items Not Selected.");
        } else {
            File folder = new File(txtDir.getText());
            if (!FileUt.renameFile(lF, tvdb, folder, options.getLanguageTag(), filtSubs)){
                System.out.println("Failed in rename selected.");
            }
            buttonRefresh.doClick();
        }
        
        
    }//GEN-LAST:event_buttonRenameSelectedActionPerformed

    private void buttonManualActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonManualActionPerformed
        
    }//GEN-LAST:event_buttonManualActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUIForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUIForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUIForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUIForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUIForm().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonAllSet;
    private javax.swing.JButton buttonDir;
    private javax.swing.JButton buttonDown;
    private javax.swing.JButton buttonManual;
    private javax.swing.JButton buttonRefresh;
    private javax.swing.JButton buttonRenameSelected;
    private javax.swing.JButton buttonSet;
    private javax.swing.JButton buttonUp;
    private javax.swing.JComboBox cmbSeason;
    private javax.swing.JRadioButton dontFilterSubs;
    private javax.swing.JRadioButton filterSubs;
    private static javax.swing.JFileChooser jFile;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuOptions;
    private javax.swing.JMenu jToolsMenu;
    private java.awt.List listFiles;
    private java.awt.List listTVDB;
    private javax.swing.ButtonGroup subGroupOption;
    private javax.swing.JTextField txtDir;
    private javax.swing.JTextField txtSeries;
    // End of variables declaration//GEN-END:variables
}
